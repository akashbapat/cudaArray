#ifndef CUDA_GAUSSIAN_LUT_H_
#define CUDA_GAUSSIAN_LUT_H_

#include "cudaTexture2D.h"

// Zero-mean Gaussian lookup table for a variable standard deviation.
// Implemented using a 1D texture with linear interpolation. Probabilities are
// truncated at +/-4 sigma.

namespace cua {

class CudaGaussianLut {
 public:
  static constexpr size_t kNumLutEntries = 256;
  CudaGaussianLut();

  // Returns the probability of x.
  __device__ inline float operator()(const float x, const float sigma) const {
    // Map input |x| \in [0,4*sigma] to [0.5, N-0.5], which is the range
    // expected for CUDA texture lookups.
    const float inv_sigma = 1.0f / sigma;
    constexpr float kTextureScale = 0.25f * (kNumLutEntries - 1);
    return lut_.interp(kTextureScale * fabs(x) * inv_sigma + 0.5f, 0.5f) *
           inv_sigma;
  }

 private:
  cua::CudaTexture2D<float> lut_;
};

namespace CudaGaussianLut_internal {

// Standard Gaussian LUT for x in [0,4].
static constexpr float
    kStandardGaussianLutValues[CudaGaussianLut::kNumLutEntries] = {
        3.98942280e-01f, 3.98893202e-01f, 3.98746002e-01f, 3.98500789e-01f,
        3.98157745e-01f, 3.97717123e-01f, 3.97179246e-01f, 3.96544511e-01f,
        3.95813385e-01f, 3.94986406e-01f, 3.94064178e-01f, 3.93047380e-01f,
        3.91936753e-01f, 3.90733110e-01f, 3.89437326e-01f, 3.88050344e-01f,
        3.86573171e-01f, 3.85006875e-01f, 3.83352585e-01f, 3.81611494e-01f,
        3.79784848e-01f, 3.77873956e-01f, 3.75880178e-01f, 3.73804931e-01f,
        3.71649681e-01f, 3.69415949e-01f, 3.67105302e-01f, 3.64719354e-01f,
        3.62259765e-01f, 3.59728237e-01f, 3.57126515e-01f, 3.54456382e-01f,
        3.51719658e-01f, 3.48918199e-01f, 3.46053893e-01f, 3.43128661e-01f,
        3.40144450e-01f, 3.37103235e-01f, 3.34007016e-01f, 3.30857814e-01f,
        3.27657672e-01f, 3.24408648e-01f, 3.21112820e-01f, 3.17772274e-01f,
        3.14389113e-01f, 3.10965445e-01f, 3.07503388e-01f, 3.04005061e-01f,
        3.00472591e-01f, 2.96908101e-01f, 2.93313715e-01f, 2.89691553e-01f,
        2.86043729e-01f, 2.82372349e-01f, 2.78679512e-01f, 2.74967303e-01f,
        2.71237795e-01f, 2.67493044e-01f, 2.63735091e-01f, 2.59965959e-01f,
        2.56187647e-01f, 2.52402135e-01f, 2.48611378e-01f, 2.44817307e-01f,
        2.41021825e-01f, 2.37226806e-01f, 2.33434095e-01f, 2.29645509e-01f,
        2.25862827e-01f, 2.22087800e-01f, 2.18322142e-01f, 2.14567530e-01f,
        2.10825606e-01f, 2.07097974e-01f, 2.03386200e-01f, 1.99691809e-01f,
        1.96016287e-01f, 1.92361079e-01f, 1.88727587e-01f, 1.85117172e-01f,
        1.81531153e-01f, 1.77970804e-01f, 1.74437356e-01f, 1.70931998e-01f,
        1.67455871e-01f, 1.64010075e-01f, 1.60595663e-01f, 1.57213644e-01f,
        1.53864984e-01f, 1.50550602e-01f, 1.47271372e-01f, 1.44028125e-01f,
        1.40821647e-01f, 1.37652680e-01f, 1.34521921e-01f, 1.31430024e-01f,
        1.28377599e-01f, 1.25365216e-01f, 1.22393398e-01f, 1.19462629e-01f,
        1.16573352e-01f, 1.13725967e-01f, 1.10920835e-01f, 1.08158276e-01f,
        1.05438574e-01f, 1.02761972e-01f, 1.00128676e-01f, 9.75388548e-02f,
        9.49926428e-02f, 9.24901378e-02f, 9.00314035e-02f, 8.76164701e-02f,
        8.52453350e-02f, 8.29179639e-02f, 8.06342915e-02f, 7.83942226e-02f,
        7.61976326e-02f, 7.40443692e-02f, 7.19342523e-02f, 6.98670761e-02f,
        6.78426090e-02f, 6.58605952e-02f, 6.39207554e-02f, 6.20227881e-02f,
        6.01663698e-02f, 5.83511568e-02f, 5.65767856e-02f, 5.48428741e-02f,
        5.31490225e-02f, 5.14948141e-02f, 4.98798163e-02f, 4.83035816e-02f,
        4.67656484e-02f, 4.52655420e-02f, 4.38027752e-02f, 4.23768496e-02f,
        4.09872560e-02f, 3.96334757e-02f, 3.83149810e-02f, 3.70312358e-02f,
        3.57816971e-02f, 3.45658150e-02f, 3.33830341e-02f, 3.22327937e-02f,
        3.11145289e-02f, 3.00276710e-02f, 2.89716483e-02f, 2.79458870e-02f,
        2.69498114e-02f, 2.59828449e-02f, 2.50444102e-02f, 2.41339303e-02f,
        2.32508287e-02f, 2.23945303e-02f, 2.15644615e-02f, 2.07600509e-02f,
        1.99807299e-02f, 1.92259328e-02f, 1.84950978e-02f, 1.77876666e-02f,
        1.71030855e-02f, 1.64408054e-02f, 1.58002825e-02f, 1.51809780e-02f,
        1.45823591e-02f, 1.40038988e-02f, 1.34450765e-02f, 1.29053780e-02f,
        1.23842958e-02f, 1.18813296e-02f, 1.13959860e-02f, 1.09277792e-02f,
        1.04762306e-02f, 1.00408696e-02f, 9.62123327e-03f, 9.21686652e-03f,
        8.82732242e-03f, 8.45216213e-03f, 8.09095501e-03f, 7.74327871e-03f,
        7.40871920e-03f, 7.08687080e-03f, 6.77733626e-03f, 6.47972673e-03f,
        6.19366176e-03f, 5.91876936e-03f, 5.65468591e-03f, 5.40105618e-03f,
        5.15753330e-03f, 4.92377869e-03f, 4.69946203e-03f, 4.48426123e-03f,
        4.27786231e-03f, 4.07995936e-03f, 3.89025446e-03f, 3.70845762e-03f,
        3.53428664e-03f, 3.36746705e-03f, 3.20773202e-03f, 3.05482222e-03f,
        2.90848575e-03f, 2.76847801e-03f, 2.63456158e-03f, 2.50650611e-03f,
        2.38408820e-03f, 2.26709129e-03f, 2.15530549e-03f, 2.04852750e-03f,
        1.94656048e-03f, 1.84921387e-03f, 1.75630331e-03f, 1.66765049e-03f,
        1.58308302e-03f, 1.50243427e-03f, 1.42554330e-03f, 1.35225464e-03f,
        1.28241823e-03f, 1.21588928e-03f, 1.15252806e-03f, 1.09219989e-03f,
        1.03477490e-03f, 9.80127961e-04f, 9.28138550e-04f, 8.78690602e-04f,
        8.31672401e-04f, 7.86976449e-04f, 7.44499344e-04f, 7.04141662e-04f,
        6.65807833e-04f, 6.29406028e-04f, 5.94848037e-04f, 5.62049164e-04f,
        5.30928106e-04f, 5.01406853e-04f, 4.73410572e-04f, 4.46867506e-04f,
        4.21708873e-04f, 3.97868758e-04f, 3.75284024e-04f, 3.53894206e-04f,
        3.33641424e-04f, 3.14470287e-04f, 2.96327807e-04f, 2.79163306e-04f,
        2.62928339e-04f, 2.47576604e-04f, 2.33063864e-04f, 2.19347869e-04f,
        2.06388282e-04f, 1.94146601e-04f, 1.82586088e-04f, 1.71671702e-04f,
        1.61370030e-04f, 1.51649222e-04f, 1.42478925e-04f, 1.33830226e-04f};

}  // namespace CudaGaussianLut_internal

CudaGaussianLut::CudaGaussianLut()
    : lut_(kNumLutEntries, 1, cudaFilterModeLinear) {
  lut_ = CudaGaussianLut_internal::kStandardGaussianLutValues;  // upload to GPU
}

}  // namespace cua

#endif  // CUDA_GAUSSIAN_LUT_H_
